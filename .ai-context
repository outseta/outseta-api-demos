# Outseta Admin API Demos â€“ AI Context & Contribution Guide

## Purpose

This file provides instructions and conventions for creating new demo scripts and their documentation in this repository. All new demos and docs **must** follow the patterns established in the following files:

- `track-usage.js`, `auth-token.js`
- `track-usage.md`, `auth-token.md`

---

## Code Patterns (JS Files)

### 1. Structure

- **Top-level async function** for main logic (e.g., `main()`), invoked only if run as CLI.
- **All API logic** in one or more `async` functions, exported if useful for reuse.
- **Inquirer** for CLI prompts (imported as `inquirer`).
- **dotenv/config** import at the top for environment variables.
- **Error handling**: Use `try/catch` in all async functions. Print user-friendly errors, suppress stack traces for Ctrl+C exits.
- **API requests**: Use `fetch` with `Authorization` header from env vars. Always check `response.ok` and print API responses in a readable format.

```
{
    Authorization: `Outseta ${process.env.OUTSETA_API_KEY}:${process.env.OUTSETA_API_SECRET}`,
    "Content-Type": "application/json",
}
```

- **Logging**: Use `console.info` for API responses and key steps. Use clear emoji and section headers for user feedback.
- **SIGINT handling**: Gracefully handle Ctrl+C (print "Exited." and exit).

### 2. CLI Pattern

- Prompt for all required inputs using `inquirer.prompt`.
- Print clear step-by-step progress (e.g., "Fetching plans...", "Registering user...").
- On success, print a summary of the result (e.g., IDs, names, tokens).
- On error, print a clear error message and exit with code 1.

### 3. API Usage

- Use Outseta API endpoints as described in the demo's purpose.
- Always show example payloads and responses in logs.
- Validate user input before making API calls.

### 4. Custom Fields

- If using custom fields, document them in both code and docs.

---

## Documentation Patterns (MD Files)

### 1. Structure

- **Title**: Short, descriptive, matches script name.
- **Purpose**: What the demo does and why.
- **What it does**: Bullet list of main actions.
- **Use cases**: When/why to use this demo.
- **Prerequisites**: List required setup, link to global README.
- **Run the demo**: Step-by-step CLI instructions, including example session.
- **What happens next?**: Explain post-demo state or next steps.
- **API Endpoints Used**: List and briefly describe all endpoints used.
- **Core Code Example**: Show the main API call(s) as a code block.
- **Learn More**: Link to Outseta docs/support.
- **Warnings**: Remind to test in dev before prod.

### 2. Style

- Use emoji for section headers and user feedback (see existing docs for examples).
- Use fenced code blocks for CLI and code examples.
- Use clear, concise language. Avoid unnecessary jargon.
- Always include an example session showing CLI prompts and output.
- Document any custom fields or non-obvious behavior.

---

## General Guidelines

- **Consistency is key**: All new demos and docs must match the structure, style, and tone of the reference files.
- **User experience**: Prioritize clear prompts, helpful errors, and actionable output.
- **Documentation**: Every script must have a matching `.md` file following the above pattern.
- **Testing**: Test scripts interactively before submitting. Ensure all prompts, errors, and outputs are clear.

---

## Reference Files

- Code: `track-usage.js`, `auth-token.js`
- Docs: `track-usage.md`, `auth-token.md`

If in doubt, copy the structure and style of these files.
